# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-09 03:41
from __future__ import unicode_literals

import api.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_owner', models.BooleanField(default=False, help_text='Designates whether the user is an owner of a food truck', verbose_name='owner status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LikedTruck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('details', models.CharField(blank=True, max_length=1000)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=9)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=9)),
                ('start_time', models.DateTimeField(default=api.models.round_up_time, help_text='Start time for opening')),
                ('end_time', models.DateTimeField(default=api.models.hour_later, help_text='End time for opening')),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(default='Food Truck', max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('genre', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('phone', models.CharField(blank=True, max_length=9)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TruckRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(1)])),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Truck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Truck'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Truck'),
        ),
        migrations.AddField(
            model_name='likedtruck',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Truck'),
        ),
        migrations.AddField(
            model_name='likedtruck',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
